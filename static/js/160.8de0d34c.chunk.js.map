{"version":3,"file":"static/js/160.8de0d34c.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n\tconst [comics, setComics] = useState([]);\n\tconst [offset, setOffset] = useState(210);\n\tconst [initialItemsLoading, setInitialItemsLoading] = useState(true);\n\tconst { loading, getAllComics } = useMarvelService();\n\n\tconst accessingApi = useCallback(async () => {\n\t\ttry {\n\t\t\tconst comics = await getAllComics(offset);\n\t\t\tsetComics((prevComics) => [...prevComics, ...comics]);\n\t\t\tsetInitialItemsLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Ошибка при загрузке данных:\", error);\n\t\t}\n\t}, [offset]);\n\n\tuseEffect(() => {\n\t\taccessingApi();\n\t}, [accessingApi]);\n\n\tconst handleLoadMore = () => {\n\t\tsetOffset((prevOffset) => prevOffset + 8);\n\t};\n\n\treturn (\n\t\t<div className='comics__list'>\n\t\t\t{initialItemsLoading ? <Spinner /> : null}\n\t\t\t<ul className='comics__grid'>\n\t\t\t\t{comics.map((comic, i) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName='comics__item'\n\t\t\t\t\t\tkey={comic.id + i}>\n\t\t\t\t\t\t<Link to={`/comics/${comic.id}`}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${comic.thumbnail.path}.${comic.thumbnail.extension}`}\n\t\t\t\t\t\t\t\talt={comic.title}\n\t\t\t\t\t\t\t\tclassName='comics__item-img'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='comics__item-name'>{comic.title}</div>\n\t\t\t\t\t\t\t<div className='comics__item-price'>\n\t\t\t\t\t\t\t\t{comic.prices[0].price\n\t\t\t\t\t\t\t\t\t? `${comic.prices[0].price}$`\n\t\t\t\t\t\t\t\t\t: \"NOT AVAILABLE\"}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tonClick={handleLoadMore}\n\t\t\t\tdisabled={loading}>\n\t\t\t\t<div className='inner'>{loading ? \"Loading...\" : \"Load More\"}</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ComicsList;\n","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<AppBanner />\n\t\t\t<ComicsList />\n\t\t</>\n\t);\n};\n\nexport default ComicsPage;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = \"GET\",\n\t\t\tbody = null,\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\n\t\t) => {\n\t\t\tsetLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tsetLoading(false);\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn { loading, request, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst { loading, request, error, clearError } = useHttp();\n\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\tconst _apiKey = \"apikey=58a1c7f15ef58395ab52a6c63927a461\";\n\tconst _ts = \"ts=1738563207400\";\n\tconst _hash = \"hash=d5ecccf7ee705be62d227e32dc2a3a47\";\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacterById = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getAllComics = async (offset = _baseOffset) => {\n\t\tconst data = await request(\n\t\t\t`${_apiBase}/comics?${_ts}&${_apiKey}&${_hash}&offset=${offset}&limit=8`\n\t\t);\n\t\treturn data.data.results;\n\t\t// return data.data.results.map(_transformComics);\n\t};\n\n\tconst getComicById = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription:\n\t\t\t\tchar.description !== \"\"\n\t\t\t\t\t? char.description.length > 182\n\t\t\t\t\t\t? char.description.slice(0, 182) + \"...\"\n\t\t\t\t\t\t: char.description\n\t\t\t\t\t: char.description + \"The character has no description\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} page`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\treturn {\n\t\tloading,\n\t\terror,\n\t\tgetAllCharacters,\n\t\tgetCharacterById,\n\t\tgetAllComics,\n\t\tgetComicById,\n\t\tclearError,\n\t};\n};\n\nexport default useMarvelService;\n"],"names":["ComicsList","comics","setComics","useState","offset","setOffset","initialItemsLoading","setInitialItemsLoading","loading","getAllComics","useMarvelService","accessingApi","useCallback","async","prevComics","error","console","useEffect","_jsxs","className","children","_jsx","Spinner","map","comic","i","Link","to","concat","id","src","thumbnail","path","extension","alt","title","prices","price","onClick","handleLoadMore","prevOffset","disabled","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment","request","clearError","useHttp","setLoading","setError","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","homepage","urls","wiki","_transformComics","_comics$textObjects$","pageCount","language","textObjects","getAllCharacters","results","getCharacterById","res","getComicById"],"sourceRoot":""}