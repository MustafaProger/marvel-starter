{"version":3,"file":"static/js/56.d298773c.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundery/ErrorBoundery.js","components/pages/MainPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from \"./error.gif\";\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/alt-text\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\tdisplay: \"block\",\n\t\t\t\twidth: 250,\n\t\t\t\theight: 250,\n\t\t\t\tobjectFit: \"contain\",\n\t\t\t\tmargin: \"0 auto\",\n\t\t\t}}\n\t\t\tsrc={img}\n\t\t/>\n\t);\n};\n\nexport default ErrorMessage;\n","import { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport \"./randomChar.scss\";\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\tconst { loading, error, getCharacterById, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacterById(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button\n\t\t\t\t\tclassName='button button__main'\n\t\t\t\t\tonClick={updateChar}>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img\n\t\t\t\t\tsrc={mjolnir}\n\t\t\t\t\talt='mjolnir'\n\t\t\t\t\tclassName='randomchar__decoration'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char;\n\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (\n\t\tthumbnail ===\n\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t) {\n\t\timgStyle = { objectFit: \"contain\" };\n\t}\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt='Random character'\n\t\t\t\tclassName='randomchar__img'\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{description}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={homepage}\n\t\t\t\t\t\tclassName='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={wiki}\n\t\t\t\t\t\tclassName='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { loading, error, getAllCharacters } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\n\t};\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList((charList) => [...charList, ...newCharList]);\n\t\tsetNewItemLoading((newItemLoading) => false);\n\t\tsetOffset((offset) => offset + 9);\n\t\tsetCharEnded((charEnded) => ended);\n\t};\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\t// Я реализовал вариант чуть сложнее, и с классом и с фокусом\n\t\t// Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n\t\t// На самом деле, решение с css-классом можно сделать, вынеся персонажа\n\t\t// в отдельный компонент. Но кода будет больше, появится новое состояние\n\t\t// и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n\t\t// По возможности, не злоупотребляйте рефами, только в крайних случаях\n\t\titemRefs.current.forEach((item) =>\n\t\t\titem.classList.remove(\"char__item_selected\")\n\t\t);\n\t\titemRefs.current[id].classList.add(\"char__item_selected\");\n\t\titemRefs.current[id].focus();\n\t};\n\n\t// Этот метод создан для оптимизации,\n\t// чтобы не помещать такую конструкцию в метод render\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: \"cover\" };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: \"unset\" };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.key === \" \" || e.key === \"Enter\") {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\n\t\treturn <ul className='char__grid'>{items}</ul>;\n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? \"none\" : \"block\" }}\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className='inner'>{loading ? \"Loading...\" : \"Load More\"}</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","/* eslint-disable array-callback-return */\n/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport \"./charInfo.scss\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { loading, error, getCharacterById, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId]);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar((prevChar) => char);\n\t};\n\n\tconst onCharLoading = () => {\n\t\tscrollToInpo();\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetCharacterById(charId).then(onCharLoaded);\n\t};\n\n\tconst scrollToInpo = () => {\n\t\tconst info = document.querySelector(\".char__info\");\n\t\tif (info) {\n\t\t\t// Получаем позицию первого элемента\n\t\t\tconst targetPosition =\n\t\t\t\tinfo.getBoundingClientRect().top + window.pageYOffset;\n\t\t\tconst startPosition = window.pageYOffset;\n\t\t\tconst distance = targetPosition - startPosition - 100; // Учитываем отступ 100px для navbar\n\t\t\tconst duration = 1000;\n\t\t\tlet startTime = null;\n\n\t\t\tconst ease = (t, b, c, d) => {\n\t\t\t\tt /= d / 2;\n\t\t\t\tif (t < 1) return (c / 2) * t * t + b;\n\t\t\t\tt--;\n\t\t\t\treturn (-c / 2) * (t * (t - 2) - 1) + b;\n\t\t\t};\n\n\t\t\tconst scrollAnimation = (currentTime) => {\n\t\t\t\tif (startTime === null) startTime = currentTime;\n\t\t\t\tconst timeElapsed = currentTime - startTime;\n\t\t\t\tconst run = ease(timeElapsed, startPosition, distance, duration);\n\t\t\t\twindow.scrollTo(0, run);\n\t\t\t\tif (timeElapsed < duration) requestAnimationFrame(scrollAnimation);\n\t\t\t};\n\n\t\t\trequestAnimationFrame(scrollAnimation);\n\t\t}\n\t};\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char;\n\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (\n\t\tthumbnail ===\n\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t) {\n\t\timgStyle = { objectFit: \"unset\" };\n\t}\n\n\tconst charDescr =\n\t\tcomics.available === 0 ? (\n\t\t\t<li\n\t\t\t\tkey={0}\n\t\t\t\tclassName='char__comics-item'>\n\t\t\t\tThe character has no comics\n\t\t\t</li>\n\t\t) : (\n\t\t\tcomics.items.map(({ name }, i) => {\n\t\t\t\tif (i < 10) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName='char__comics-item'>\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img\n\t\t\t\t\tsrc={thumbnail}\n\t\t\t\t\talt='Image character'\n\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={homepage}\n\t\t\t\t\t\t\tclassName='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref={wiki}\n\t\t\t\t\t\t\tclassName='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>{charDescr}</ul>\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundery extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({error: true})\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        } \n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundery;","import { useState } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundery from \"../errorBoundery/ErrorBoundery\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nconst MainPage = () => {\n\tconst [selectedChar, setSelectedChar] = useState(null);\n\n\treturn (\n\t\t<>\n\t\t\t<ErrorBoundery>\n\t\t\t\t<RandomChar />\n\t\t\t</ErrorBoundery>\n\t\t\t<div className='char__content'>\n\t\t\t\t<ErrorBoundery>\n\t\t\t\t\t<CharList onCharSelected={setSelectedChar} />\n\t\t\t\t</ErrorBoundery>\n\t\t\t\t<ErrorBoundery>\n\t\t\t\t\t<CharInfo charId={selectedChar} />\n\t\t\t\t</ErrorBoundery>\n\t\t\t</div>\n\t\t\t<img\n\t\t\t\tclassName='bg-decoration'\n\t\t\t\tsrc={decoration}\n\t\t\t\talt='vision'\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default MainPage;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = \"GET\",\n\t\t\tbody = null,\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\n\t\t) => {\n\t\t\tsetLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tsetLoading(false);\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn { loading, request, error, clearError };\n};\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst { loading, request, error, clearError } = useHttp();\n\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\tconst _apiKey = \"apikey=58a1c7f15ef58395ab52a6c63927a461\";\n\tconst _ts = \"ts=1738563207400\";\n\tconst _hash = \"hash=d5ecccf7ee705be62d227e32dc2a3a47\";\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacterById = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getAllComics = async (offset = _baseOffset) => {\n\t\tconst data = await request(\n\t\t\t`${_apiBase}/comics?${_ts}&${_apiKey}&${_hash}&offset=${offset}&limit=8`\n\t\t);\n\t\treturn data.data.results;\n\t\t// return data.data.results.map(_transformComics);\n\t};\n\n\tconst getComicById = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription:\n\t\t\t\tchar.description !== \"\"\n\t\t\t\t\t? char.description.length > 182\n\t\t\t\t\t\t? char.description.slice(0, 182) + \"...\"\n\t\t\t\t\t\t: char.description\n\t\t\t\t\t: char.description + \"The character has no description\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} page`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\treturn {\n\t\tloading,\n\t\terror,\n\t\tgetAllCharacters,\n\t\tgetCharacterById,\n\t\tgetAllComics,\n\t\tgetComicById,\n\t\tclearError,\n\t};\n};\n\nexport default useMarvelService;\n"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","View","_ref","char","name","description","thumbnail","homepage","wiki","imgStyle","_jsxs","className","children","alt","href","RandomChar","setChar","useState","loading","error","getCharacterById","clearError","useMarvelService","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","tabIndex","ref","el","onCharSelected","onKeyDown","e","key","renderItems","disabled","Skeleton","_Fragment","comics","charDescr","available","_ref2","charId","prevChar","skeleton","ErrorBoundery","Component","constructor","arguments","state","componentDidCatch","errorInfo","console","log","this","setState","render","MainPage","selectedChar","setSelectedChar","CharList","CharInfo","decoration","request","useHttp","setLoading","setError","useCallback","async","url","method","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","message","_apiBase","_apiKey","_transformCharacter","slice","path","extension","urls","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","results","res","getAllComics","getComicById"],"sourceRoot":""}